import sparql_dataframe
import pandas as pd
from orkg import ORKG
from datetime import datetime

orkg = ORKG(host="https://www.orkg.org/")

# The list was only a quick solution. The list can be obtained either by the API or SPARQL.
papersKGEmpiRE = ['R1355372', 'R1355398', 'R1355793', 'R758416', 'R759344', 'R742443', 'R752003', 'R752108', 'R1374601', 'R1374618', 'R684329', 'R708774', 'R712785', 'R713795', 'R713816', 'R713822', 'R716500', 'R716507', 'R716516', 'R716528', 'R716534', 'R723993', 'R724132', 'R725453', 'R725474', 'R725768', 'R725860', 'R725892', 'R725946', 'R734861', 'R734867', 'R678962', 'R678968', 'R678982', 'R680008', 'R680028', 'R680038', 'R680046', 'R680050', 'R680058', 'R684186', 'R684194', 'R684203', 'R684218', 'R684234', 'R684242', 'R684253', 'R684258', 'R684279', 'R684283', 'R684287', 'R661908', 'R661923', 'R671037', 'R671056', 'R671096', 'R675312', 'R675325', 'R675329', 'R675336', 'R675340', 'R675344', 'R675349', 'R675356', 'R675363', 'R675371', 'R675391', 'R675395', 'R675399', 'R677200', 'R677204', 'R677208', 'R678138', 'R678142', 'R678146', 'R678199', 'R678216', 'R678227', 'R609340', 'R644458', 'R644464', 'R644601', 'R644689', 'R644694', 'R647097', 'R651407', 'R651411', 'R659290', 'R659408', 'R659413', 'R659470', 'R659479', 'R660083', 'R660094', 'R660217', 'R661887', 'R661896', 'R661904', 'R600479', 'R600488', 'R601221', 'R602865', 'R602883', 'R603577', 'R603583', 'R603586', 'R603589', 'R603600', 'R603616', 'R603619', 'R603622', 'R603625', 'R605077', 'R605419', 'R605866', 'R605881', 'R605922', 'R606056', 'R606061', 'R606148', 'R606247', 'R606260', 'R606293', 'R606302', 'R606309', 'R606569', 'R606576', 'R606839', 'R606846', 'R606860', 'R606868', 'R606919', 'R606928', 'R606978', 'R607051', 'R607060', 'R608032', 'R608041', 'R608147', 'R608150', 'R598249', 'R598274', 'R598281', 'R598284', 'R598496', 'R598506', 'R598583', 'R598586', 'R598595', 'R598598', 'R598606', 'R598614', 'R598631', 'R598694', 'R596003', 'R596015', 'R596028', 'R596037', 'R596045', 'R597081', 'R597102', 'R597176', 'R597183', 'R597186', 'R597383', 'R597386', 'R597394', 'R597400', 'R597409', 'R597880', 'R597889', 'R597910', 'R598064', 'R598067', 'R598083', 'R598217', 'R598220', 'R598223', 'R598230', 'R598244', 'R584052', 'R587118', 'R587127', 'R587135', 'R587141', 'R587149', 'R587153', 'R588483', 'R588487', 'R588494', 'R588498', 'R588508', 'R588512', 'R588523', 'R588540', 'R588553', 'R588557', 'R588565', 'R588569', 'R588573', 'R588967', 'R588979', 'R589002', 'R589009', 'R589016', 'R589022', 'R589029', 'R589038', 'R589047', 'R589055', 'R589059', 'R589063', 'R584056', 'R584065', 'R584073', 'R584081', 'R584085', 'R584093', 'R584097', 'R584105', 'R584109', 'R584117', 'R586445', 'R586458', 'R586470', 'R586481', 'R586485', 'R586489', 'R586504', 'R586508', 'R586512', 'R586519', 'R586527', 'R587084', 'R587093', 'R587101', 'R587110', 'R583161', 'R583166', 'R583172', 'R583188', 'R583205', 'R583209', 'R583218', 'R583226', 'R583860', 'R583866', 'R583872', 'R583880', 'R583886', 'R583895', 'R583903', 'R583912', 'R583920', 'R583928', 'R583935', 'R583944', 'R583948', 'R583952', 'R584012', 'R584020', 'R584028', 'R584036', 'R584044', 'R578050', 'R578059', 'R580049', 'R580056', 'R580060', 'R580068', 'R580077', 'R580091', 'R580100', 'R580108', 'R580119', 'R580127', 'R580133', 'R580141', 'R580149', 'R583009', 'R583013', 'R583022', 'R583034', 'R583048', 'R583052', 'R583056', 'R583066', 'R583074', 'R583082', 'R583090', 'R583098', 'R583105', 'R583115', 'R583119', 'R583127', 'R583135', 'R583143', 'R583147', 'R583153', 'R556363', 'R556637', 'R557163', 'R558201', 'R558790', 'R576739', 'R576748', 'R576757', 'R576765', 'R576776', 'R158044', 'R576789', 'R576793', 'R576802', 'R578004', 'R578008', 'R578016', 'R578020', 'R578027', 'R578035', 'R578043', 'R554452', 'R554460', 'R554468', 'R554861', 'R555217', 'R555710', 'R556041', 'R288460', 'R288476', 'R288482', 'R288485', 'R288494', 'R288507', 'R288513', 'R288742', 'R288764', 'R288766', 'R288783', 'R288794', 'R288798', 'R288801', 'R288808', 'R369142', 'R369238', 'R369339', 'R369483', 'R369602', 'R369685', 'R369715', 'R283098', 'R283106', 'R285771', 'R285776', 'R285781', 'R285790', 'R285805', 'R285808', 'R285813', 'R285816', 'R285826', 'R287812', 'R287825', 'R287836', 'R287845', 'R287851', 'R287863', 'R287873', 'R288432', 'R288440', 'R288443', 'R288450', 'R288453', 'R280738', 'R280747', 'R280754', 'R280758', 'R280765', 'R280785', 'R280789', 'R280793', 'R280798', 'R280811', 'R280818', 'R281162', 'R281166', 'R281172', 'R281188', 'R281194', 'R281210', 'R281215', 'R283066', 'R283069', 'R283077', 'R283080', 'R283089', 'R283092', 'R283095', 'R279079', 'R279086', 'R279109', 'R279116', 'R279126', 'R279133', 'R279136', 'R279141', 'R279151', 'R279158', 'R280299', 'R280303', 'R280308', 'R280317', 'R280329', 'R280335', 'R280347', 'R280375', 'R280412', 'R280448', 'R280481', 'R280486', 'R280498', 'R280511', 'R280521', 'R280526', 'R280529', 'R159690', 'R249016', 'R249021', 'R249030', 'R254495', 'R254508', 'R254521', 'R256580', 'R263000', 'R264011', 'R265006', 'R265019', 'R265028', 'R276000', 'R276005', 'R276009', 'R276015', 'R276020', 'R276024', 'R276031', 'R276045', 'R276051', 'R276059', 'R220823', 'R220831', 'R220838', 'R220845', 'R220858', 'R220874', 'R220881', 'R220892', 'R220898', 'R221137', 'R221147', 'R221156', 'R221163', 'R221169', 'R221176', 'R221183', 'R221187', 'R221801', 'R221821', 'R221838', 'R222366', 'R222372', 'R222375', 'R225574', 'R225580', 'R225589', 'R220303', 'R220314', 'R220323', 'R220343', 'R220354', 'R220364', 'R220371', 'R220378', 'R220383', 'R220388', 'R220390', 'R220538', 'R220583', 'R220605', 'R220611', 'R220618', 'R220624', 'R220629', 'R220633', 'R220643', 'R220798', 'R220810', 'R211096', 'R211106', 'R211121', 'R211137', 'R211145', 'R211154', 'R211177', 'R211188', 'R211198', 'R211279', 'R211283', 'R211294', 'R211302', 'R211327', 'R211336', 'R211351', 'R211361', 'R211370', 'R211380', 'R211394', 'R211404', 'R211411', 'R211428', 'R211438', 'R211452', 'R211459', 'R211467', 'R211474', 'R211485', 'R211494', 'R211502', 'R199005', 'R199014', 'R199023', 'R199028', 'R199039', 'R199113', 'R199123', 'R199136', 'R199149', 'R199158', 'R199162', 'R78392', 'R200042', 'R200045', 'R200049', 'R200061', 'R200098', 'R200106', 'R200119', 'R198663', 'R198673', 'R198681', 'R198689', 'R198706', 'R198724', 'R198795', 'R198797', 'R198808', 'R111988', 'R198833', 'R198856', 'R198877', 'R198904', 'R74547', 'R198917', 'R78432', 'R198944', 'R198964', 'R198972', 'R198979', 'R198994', 'R76792', 'R108199', 'R195495', 'R113008', 'R195513', 'R195519', 'R113067', 'R195551', 'R112434', 'R195578', 'R195587', 'R195597', 'R195664', 'R195669', 'R195679', 'R195692', 'R195713', 'R195728', 'R195743', 'R195749', 'R195767', 'R195789', 'R195806', 'R195849', 'R195857', 'R195866', 'R195982', 'R195986', 'R195995', 'R195998', 'R196009', 'R196014', 'R196021', 'R196033', 'R196046', 'R196065', 'R196070', 'R197609', 'R194686', 'R194698', 'R194922', 'R194932', 'R194954', 'R194974', 'R113160', 'R195005', 'R195023', 'R195107', 'R195113', 'R195124', 'R113204', 'R195129', 'R76818', 'R195144', 'R195153', 'R195173', 'R195179', 'R195182', 'R195201', 'R195216', 'R195218', 'R195224', 'R194237', 'R194253', 'R194281', 'R194317', 'R194345', 'R194360', 'R194373', 'R194401', 'R194414', 'R194425', 'R194428', 'R194431', 'R194445', 'R194458', 'R194474', 'R194607', 'R194610', 'R194870', 'R194875', 'R194884', 'R194895', 'R194905', 'R193371', 'R193385', 'R193406', 'R193418', 'R193441', 'R193467', 'R193473', 'R193481', 'R193490', 'R193898', 'R193920', 'R193925', 'R193929', 'R194054', 'R194084', 'R194093', 'R194114', 'R194125', 'R194139', 'R194641', 'R192345', 'R192386', 'R192398', 'R192428', 'R192445', 'R193022', 'R193025', 'R193035', 'R193044', 'R193070', 'R193089', 'R193108', 'R193295', 'R193308', 'R193330', 'R193336', 'R193341', 'R193357', 'R193798', 'R193818', 'R193828', 'R193849', 'R193866', 'R227465', 'R227482', 'R227501', 'R227514', 'R227533', 'R227551', 'R228189', 'R228211', 'R228222', 'R228229', 'R228262', 'R229273', 'R229316', 'R229340', 'R229369', 'R229375']
p_test=["R159690", 'R192345']
all_contributions = [p_test]

def count_RPL(resid):
    resources = list({})
    literals = list({})
    predicates = list({})
    dist_resources = set({})
    dist_literals = set({})
    dist_predicates = set({}) 

    statements2 = 0

    for id in resid:
        statements = orkg.statements.bundle(thing_id=id, maxLevel=15).content['statements']

        statements2 = statements2 + len(statements)

        for statement in statements:
            cls = statement['subject']['_class']
            if cls == 'resource':
                resources.append(statement['subject']['id'])
                dist_resources.add(statement['subject']['id'])
            else:
                literals.append(statement['subject']['id'])
                dist_literals.add(statement['subject']['id'])
            
            cls = statement['object']['_class']
            if cls == 'resource':
                resources.append(statement['object']['id'])
                dist_resources.add(statement['subject']['id'])
            else:
                literals.append(statement['object']['id'])
                dist_literals.add(statement['subject']['id'])
            
            predicates.append(statement['predicate']['id'])
            dist_predicates.add(statement['predicate']['id'])
    
    return statements2, len(resources), len(dist_resources), len(literals), len(dist_literals), len(predicates), len(dist_predicates)

results = pd.DataFrame({'#Statements':pd.Series(dtype='int'), '#Resources': pd.Series(dtype='int'), '#DistResources': pd.Series(dtype='int'), '#Literals': pd.Series(dtype='int'), '#DistLiterals': pd.Series(dtype='int'), '#Predicates': pd.Series(dtype='int'), '#DistPredicates': pd.Series(dtype='int')})

for element in all_contributions:
   s, r, dr, l, dl, p, dp = count_RPL(element)
   results = pd.concat([results, pd.DataFrame({'#Statements':s, '#Resources':r, '#DistResources':dr, '#Literals':l, '#DistLiterals':dl, '#Predicates':p, '#DistPredicates':dp}, index=[0])], ignore_index=True)
   #print(f'For element({element}): you have distinct {r} resource, {l} literals, and {p} predicate')

print(results)